웹 프로그래밍?
웹상에서 사용자와 사용자/기업간의 연결 하기위해 사용하는 프로그래밍

*가장먼저 개발된 웹프로그래밍 언어HTML =>텍스트기반의 문서작성, 정적인 데이터처리(고정되어있음)
	CGI,ASP,PHP,JSP=>동적인 데이터 처리

JSP지시어(Directive)

<%@  속성=값  %>
- 	클라이언트가 요청한 jsp페이지가 실행될때, 필요한 정보를 지정 역할
	JSP컨테이너 해당페이지를 어떤방식으로 처리할지 알려주는 역활
	@page, @include ,@taglib
	
	<%@ page~ %>
	=>서버에 요청한 결과를 응답받을때 생성되는 페이지 타입, 처리되는 언어, 추가할 클래스
	정보들을 설정하는 방법
	p150~ 
	language --사용하는 프로그래밍 언어 
	import  --추가파일 클래스
	contentType --어떤형태의 모양을 가지는지(text/html)형태로 만들껀데 charset=utf-8 로 인코딩 해라
	pageEncoding --현재페이지를 문자를어떤방식으로 보여줄지 
	
	
	<%@ include ~ %>
	=> 공통적으로 사용되는 내용을 파일로 만들어서 추가하는 방법
	<%@ include file= "파일url" %>
	==>두개의 파일이 하나의 파일로 합쳐진 후에 파일이 컴파일 실행	
	<%@ taglib ~ %>  jstl 할때 다시 설명

	p160~
	선언문 (변수,메서드)
	<%! %>
	<%!
		int a=100;//멤버변수(전역변수)
		public void method(){
			불라불라;	
		}
	%>
	스크립틀릿		
		<% %>
		<%
			int b= 200;//지역변수
		%>
	표현식: 선언되어 있는 변수의 값을 사용, 메서드의 리턴값 사용
	외부 페이지에 바로 출력, [;]을 상요하면 안됨.
	<%= %>
	
	*JSP 내장 객체 총9개 이건 꼭 외워야함
	->해당 객체의 클래스,패키지 import 사용없이 쓸수있는 객체 
	
	javax.servlet  패키지 -8 개
		request,response,session,pageContext,
		out,applicationm,config,page
	
	java.lang 패키치 -1개
	
		exception

	*request 객체(요청)
	-웹 브라우저의 요청 정보를 저장객체
	-폼태그 사용해서 입력한 정보를 저장해서 사용
	-파라미터값 외에도 웹브라우저, 웹서버,헤더  정보를 처리가능 
	
	*response 객체(응답)
	-웹 브라우저의 응답 정보를 저장 객체
	-응답 관련 헤더정보, 리다이렉트 기능 사용 
	
	*out 객체
	-jsp 페이지내용을 출력하는 출력 스트림 객체
	<%= %>표현식과 같은 형태로 사용가능
	
	*pageContext 객체		
	-jsp페이지에 대한 정보를 저장 객체
	-다른 내장객체를 사용 , 페이지 흐름제어 , 에러데이터 처리
	
	*session객체
	-웹브라우저 내에서 정보를 유지하기 위한 객체
	-웹 브라우저(클라이언트)당 1개 할당
	
	*aplication 객체
	-웹 어플리케이션 Context 정보를 저장하는 객체
	-서버 설정값, 기타자원 , 해당어플리케이션이 실행하는 동안에 처리하는 이벤트로그
	-웹 어플리케이션당 1개 생성
	
	*config 객체
	-설정 정보를저장하는 객체
	-서블릿이 초기화되는 동안에 정보를 전달
	
	*page 객체 (요즘 잘 사용안함)
	-jsp페이지를 구현하는 자바 클래스 객체
	
	*exception 객체
	-jsp 페이지에서 발생하는 에러 (예외처리)할때 사용 객체
	
	*p209 영역객체(scope)속성 (attribute)
	
	영역: page,request,session,application 오른쪽으로 갈수록 처리하는 범위가 넓어짐  
		한페이지 ,요청이 이루어지는때마다,session만 존재, 서버를 돌리면 
	영역처리 객체:pageContext,session,request,application
	
	
	* 커넥션 풀(Connection Pool) :데이터베이스에 연결을 매번 새로운 연결하지않고,
	기존의 연결을 다시 활용해서 처리하는 방법
	
	->커넥션 정보를 저장하는 객체를 생성후에 커넥션 정보가 필요한 경우 미리 할당한 객체를 전달해주고
	사용이 끝난경우 다시 커넥션 풀에 회수해서 사용
	->사용자요청당 1개씩 커넥션 풀 할당 
	->일정 수준의 커넥션 풀의 개수를 지정(제한)
	->다쓰면 반납 -> 재활용
	
	1) 브라우저 에서 요청(request)
	2) 커넥션 풀에 할당 가능한 객체가 있는지 확인
	3) 있을경우 커넥션 풀을 할당 받음
	4) 커넥션 객체를 사용해서 DB처리
	5) 커넥션 풀로 반환
	* 할당 가능 객체가 없을경우 => 대기상태  or  임시 커넥션 객체를 생성 
	http://commons.apache.org/
	
	[Collections]-commons-collections4-4.4.jar
	[DBCP]-commons-dbcp2-2.7.0.jar
	[Pool]-commons-pool2-2.8.0.jar
	
	위 3개 파일을 다운로드 해서 사용 =>WEB-INF/lib/ 복사
	p.443
	
	
	
Context.xml=>DB 연결정보 저장하는 페이지
<?xml version="1.0" encoding="UTF-8"?>

<Context>
 <Resource
 name="jdbc/mysqlDB"=>사용자가 지정한 Resource 의 이름
 auth="Container"=>리소스 정보를 가져갈때 필요한 인증정보는 톰켓 컨테이너 에서 처리하겠다
 type="javax.sql.DataSource"=>공유하는 데이터 타입 지정
 dirverClassName="com.mysql.jdbc.Driver"=>드라이버 주소
 url="jdbc:mysql://localhost://3306/jsp7"=>DB주소
 username="root"=>사용자ID
 password="1234"=>사용자PW
 ----------------------------------위에는 필수-----------------------
 maxActivie="500" =>동시 제공되는 최대 커넥션 수 
 maxIdle="100" =>현제 서비스되는 커넥션을 제외한 나머지중 CP(Connect pool)
 				여유 자원으로 남길 Connection 수
/> 

 
</Context>



	*게시판
	1.입력
	2.출력
	3.삭제
	4.수정
	
	=>사용자의 요구사항 유추 =>DB 테이블 구성
	
	board 라는 이름의 테이블 생성
	정수형 :num (pk)
	문자(20) :name-글쓴이
	문자(20):pass-글 비밀번호
	문자(50):subject-글 제목
	문자(2000):content -글내용
	정수형: readcount
	정수형: re_ref-답글 
	정수형: re_lev-답글 레벨값
	정수형: re_seq-답글 순서
	date타입: date -글쓴 날짜
	문자(20): ip -글쓴사람의 ip정보 
	문자(50):file - 게시판 글에 저장된 파일 정보	
	
	1.입력-
	타이틀 - 
	본문	 -
		
	
	
	
	